openapi: 3.0.1
info:
  title: COSN API Gateway
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /runVisualization:
    post:
      tags:
        - visualization-controller
      operationId: runVisualization
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisualizationRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /register:
    post:
      tags:
        - user-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /login:
    post:
      tags:
        - user-controller
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getUserFromToken:
    post:
      tags:
        - user-controller
      operationId: getUserFromToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFromTokenRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /executeOrder:
    post:
      tags:
        - mas-controller
      operationId: executeOrder
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /changeUserRole:
    post:
      tags:
        - role-controller
      operationId: changeUserRole
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleChangeRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /roles:
    get:
      tags:
        - role-controller
      operationId: getAllRoles
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /role/{roleId}:
    get:
      tags:
        - role-controller
      operationId: getRoleById
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getSensorValues:
    get:
      tags:
        - real-system-controller
      operationId: getSensorValues
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getDomainModel:
    get:
      tags:
        - domain-model-controller
      operationId: getDomainModel
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getAllOrders:
    get:
      tags:
        - mas-controller
      operationId: getAllOrders
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getAlgorithms:
    get:
      tags:
        - algorithms-controller
      operationId: getAlgorithms
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    SimpleResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
    VisualizationRequest:
      type: object
      properties:
        tempRequest:
          type: string
    UserRegisterRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        roleId:
          type: integer
          format: int64
    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    UserFromTokenRequest:
      type: object
      properties:
        token:
          type: string
    OrderRequest:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    UserRoleChangeRequest:
      type: object
      properties:
        email:
          type: string
        roleId:
          type: integer
          format: int64
